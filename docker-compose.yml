services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react_app
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
    networks:
      - app_network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./backend:/var/www
      - ./backend/storage:/var/www/storage
      - ./backend/bootstrap/cache:/var/www/bootstrap/cache
    environment:
      - APP_URL=http://localhost:8000
      - DB_HOST=db
      - DB_PORT=3306
      - DB_DATABASE=db
      - DB_USERNAME=test
      - DB_PASSWORD=12345678
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy

  backend-nginx:
    image: nginx:alpine
    container_name: laravel_nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www
      - ./backend/docker/nginx/conf.d:/etc/nginx/conf.d/
    networks:
      - app_network
    depends_on:
      - backend

  db:
    image: mysql:8.0
    container_name: app_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: db
      MYSQL_ROOT_PASSWORD: 12345678
      MYSQL_PASSWORD: 12345678
      MYSQL_USER: test
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "test", "--password=12345678"]
      interval: 5s
      timeout: 5s
      retries: 5

networks:
  app_network:
    driver: bridge

volumes:
  dbdata:
    driver: local 